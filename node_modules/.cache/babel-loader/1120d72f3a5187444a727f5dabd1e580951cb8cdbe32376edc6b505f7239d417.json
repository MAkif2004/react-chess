{"ast":null,"code":"var _jsxFileName = \"/home/akif/Documenten/projects/chess/src/Board.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport bKingI from './images/BKing.svg';\nimport bQueenI from './images/BQueen.svg';\nimport bRookI from './images/BRook.svg';\nimport bBishupI from './images/BBishup.svg';\nimport bKnightI from './images/BKnight.svg';\nimport bPawnI from './images/BPawn.svg';\nimport wKingI from './images/WKing.svg';\nimport wQueenI from './images/WQueen.svg';\nimport wRookI from './images/WRook.svg';\nimport wBishupI from './images/WBishup.svg';\nimport wKnightI from './images/WKnight.svg';\nimport wPawnI from './images/WPawn.svg';\nimport { Piece } from './Piece';\nimport { initializeBoard } from './InitializeBoard';\nimport { legalPiece } from './LegalMove.js';\nimport { movePiece } from './MovePiece.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isReversed = false;\nlet isWhiteTurn = true;\nlet startIsPressed = false;\nlet startPiece;\nlet startPos;\nexport function Board({\n  pieces\n}) {\n  _s();\n  const [board, setBoard] = useState(initializeBoard(pieces));\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  let renderedBoard = [];\n  for (let i = 0; i < 8; i++) {\n    let rows = [];\n    for (let j = 0; j < 8; j++) {\n      switch (board[i][j].id) {\n        case 1:\n          board[i][j].isWhite == true ? rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: wKingI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 23\n          }, this)) : rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: bKingI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 23\n          }, this));\n          break;\n        case 2:\n          board[i][j].isWhite == true ? rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: wQueenI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 23\n          }, this)) : rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: bQueenI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 23\n          }, this));\n          break;\n        case 3:\n          board[i][j].isWhite == true ? rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: wRookI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 23\n          }, this)) : rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: bRookI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 23\n          }, this));\n          break;\n        case 4:\n          board[i][j].isWhite == true ? rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: wBishupI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 23\n          }, this)) : rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: bBishupI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }, this));\n          break;\n        case 5:\n          board[i][j].isWhite == true ? rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: wKnightI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 23\n          }, this)) : rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: bKnightI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 23\n          }, this));\n          break;\n        case 6:\n          board[i][j].isWhite == true ? rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: wPawnI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 23\n          }, this)) : rows.push( /*#__PURE__*/_jsxDEV(Piece, {\n            move: () => move(i, j, 'piece' + (i * 8 + j)),\n            isSelected: selectedPiece === 'piece' + (i * 8 + j),\n            name: bPawnI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this));\n          break;\n        default:\n          rows.push( /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => move(i, j, 'piece' + (i * 8 + j)),\n              className: \"piece\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this));\n          break;\n      }\n    }\n    renderedBoard.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 24\n    }, this));\n  }\n  if (isReversed) {\n    let oldBoard = renderedBoard;\n    renderedBoard = [];\n    console.log('bruh');\n    for (let i = board.length; i > 0; i--) {\n      renderedBoard.push(oldBoard[i - 1]);\n    }\n  }\n  function move(col = null, row = null, piece) {\n    let newBoard = [...board];\n    if (!startIsPressed) {\n      startPos = [col, row];\n      startPiece = newBoard[col][row];\n      startIsPressed = true;\n      if (newBoard[col][row] == 0) {\n        startIsPressed = false;\n      }\n    } else {\n      if (legalPiece(col, row, newBoard, startPos)) {\n        startIsPressed = false;\n        if (isWhiteTurn !== newBoard[startPos[0]][startPos[1]].isWhite) {\n          return;\n        }\n        isWhiteTurn = !isWhiteTurn;\n        isReversed = !isReversed;\n        setBoard(movePiece(col, row, newBoard, startPos, startPiece));\n      } else {\n        if (startPos[0] == col && startPos[1] == row) {\n          startIsPressed = false;\n        }\n        startPos = [col, row];\n        startPiece = newBoard[col][row];\n      }\n    }\n    if (selectedPiece === piece || newBoard[startPos[0]][startPos[1]] == 0) {\n      setSelectedPiece(null);\n    } else {\n      setSelectedPiece(piece);\n    }\n  }\n  function resetBoard() {\n    setBoard(initializeBoard(pieces));\n    isWhiteTurn = true;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: renderedBoard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => resetBoard(),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Board, \"JckNfTqNrG5jVY+kQUFGF3xkvWc=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","bKingI","bQueenI","bRookI","bBishupI","bKnightI","bPawnI","wKingI","wQueenI","wRookI","wBishupI","wKnightI","wPawnI","Piece","initializeBoard","legalPiece","movePiece","jsxDEV","_jsxDEV","Fragment","_Fragment","isReversed","isWhiteTurn","startIsPressed","startPiece","startPos","Board","pieces","_s","board","setBoard","selectedPiece","setSelectedPiece","renderedBoard","i","rows","j","id","isWhite","push","move","isSelected","name","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","className","oldBoard","console","log","length","col","row","piece","newBoard","resetBoard","_c","$RefreshReg$"],"sources":["/home/akif/Documenten/projects/chess/src/Board.js"],"sourcesContent":["import { useState } from 'react';\n\nimport bKingI from './images/BKing.svg';\nimport bQueenI from './images/BQueen.svg';\nimport bRookI from './images/BRook.svg';\nimport bBishupI from './images/BBishup.svg';\nimport bKnightI from './images/BKnight.svg';\nimport bPawnI from './images/BPawn.svg';\n\nimport wKingI from './images/WKing.svg';\nimport wQueenI from './images/WQueen.svg';\nimport wRookI from './images/WRook.svg';\nimport wBishupI from './images/WBishup.svg';\nimport wKnightI from './images/WKnight.svg';\nimport wPawnI from './images/WPawn.svg';\n\nimport { Piece } from './Piece';\nimport { initializeBoard } from './InitializeBoard';\n\nimport { legalPiece } from './LegalMove.js';\nimport { movePiece } from './MovePiece.js';\n\nlet isReversed = false;\nlet isWhiteTurn = true;\nlet startIsPressed = false;\nlet startPiece;\nlet startPos;\n\nexport function Board({pieces}) {\n  const [board, setBoard] = useState(initializeBoard(pieces));\n\n  const [selectedPiece, setSelectedPiece] = useState(null);\n\n  let renderedBoard = [];\n\n  for (let i = 0; i < 8; i++) {\n    let rows = [];\n    for (let j = 0; j < 8; j++) {\n      switch(board[i][j].id) {\n\n        case (1):\n          board[i][j].isWhite == true\n          ? rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={wKingI} />)\n          : rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={bKingI} />);\n          break;\n\n        case (2):\n          board[i][j].isWhite == true\n          ? rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={wQueenI} />)\n          : rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={bQueenI} />);\n          break;\n\n        case (3):\n          board[i][j].isWhite == true\n          ? rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={wRookI} />)\n          : rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={bRookI} />);\n          break;\n\n        case (4):\n          board[i][j].isWhite == true\n          ? rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={wBishupI} />)\n          : rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={bBishupI} />);\n          break;\n\n        case (5):\n          board[i][j].isWhite == true\n          ? rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={wKnightI} />)\n          : rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={bKnightI} />);\n          break;\n\n        case (6):\n          board[i][j].isWhite == true\n          ? rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={wPawnI} />)\n          : rows.push(<Piece move={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} isSelected={selectedPiece === 'piece' +  ( (i*8) + (j) )} name={bPawnI} />);\n          break;\n\n        default:\n          rows.push(<td><div onClick={() => move(i, j, 'piece' + ( (i*8) + (j) ) )} className=\"piece\"></div></td>);\n          break;\n      }\n    }\n\n    renderedBoard.push(<tr>{rows}</tr>);\n\n  }\n\n  if (isReversed) {\n    let oldBoard = renderedBoard;\n    renderedBoard = [];\n\n    console.log('bruh');\n\n    for (let i = board.length; i > 0; i--) {\n      renderedBoard.push(oldBoard[i-1]);\n    }\n  }\n\n    function move(col = null, row = null, piece) {\n        let newBoard = [...board];\n\n        if (!startIsPressed) {\n            startPos = [col, row];\n            startPiece = newBoard[col][row];\n            startIsPressed = true;\n\n            if (newBoard[col][row] == 0) {\n                startIsPressed = false\n            }\n            } else {\n            if (legalPiece(col, row, newBoard, startPos)) {\n                startIsPressed = false;\n\n                if (isWhiteTurn !== newBoard[startPos[0]][startPos[1]].isWhite) {\n                    return;\n                }\n\n                isWhiteTurn = !isWhiteTurn;\n                isReversed = !isReversed;\n\n                setBoard(movePiece(col, row, newBoard, startPos, startPiece));\n            } else {\n\n                if (startPos[0] == col && startPos[1] == row) {\n                startIsPressed = false;\n                }\n\n                startPos = [col, row];\n\n                startPiece = newBoard[col][row];\n            }\n          }\n\n        if (selectedPiece === piece || newBoard[startPos[0]][startPos[1]] == 0) {\n            setSelectedPiece(null);\n        } else {\n            setSelectedPiece(piece);\n        }\n    }\n\n    function resetBoard() {\n        setBoard(initializeBoard(pieces));\n        isWhiteTurn = true;\n    }\n\n  return (\n    <>\n      <div className=\"board\">\n        <table>\n          <tbody>{renderedBoard}</tbody>\n        </table>\n      </div>\n      <button onClick={() => resetBoard()}>Reset</button>\n    </>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}